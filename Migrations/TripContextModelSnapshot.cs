// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project1TripLog.Models;

namespace Project1TripLog.Migrations
{
    [DbContext(typeof(TripContext))]
    partial class TripContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project1TripLog.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accomodation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccomodationEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccomodationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThingToDo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingToDo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingToDo3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            TripId = 1,
                            Accomodation = "The Fantastic Hotel",
                            AccomodationEmail = "fanstastic_hotel@fantastic.com",
                            AccomodationPhone = "555-550-5550",
                            Destination = "Las Vegas",
                            EndDate = new DateTime(2021, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThingToDo1 = "Go to the Park",
                            ThingToDo2 = "Go to the Aquarium",
                            ThingToDo3 = "See a Show"
                        },
                        new
                        {
                            TripId = 2,
                            Accomodation = "The Royal Hovel",
                            AccomodationEmail = "royal_hovel@royallyhoveled.com",
                            AccomodationPhone = "555-554-5554",
                            Destination = "Atlanta",
                            EndDate = new DateTime(2021, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThingToDo1 = "Go Jousting",
                            ThingToDo2 = "Ride a Pony",
                            ThingToDo3 = "Have a Feast"
                        },
                        new
                        {
                            TripId = 3,
                            Accomodation = "The Weirdly Weird Place",
                            AccomodationEmail = "soweirdlyweirdbro@weird.com",
                            AccomodationPhone = "556-556-5556",
                            Destination = "Portland",
                            EndDate = new DateTime(2021, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThingToDo1 = "Buy a Beanie and Drink Craft Beer",
                            ThingToDo2 = "Enjoy Nature by Biking Around the City",
                            ThingToDo3 = "Voodoo Donuts"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
